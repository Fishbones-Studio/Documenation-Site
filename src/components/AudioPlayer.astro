---
export interface Props {
	src: string;
	description?: string;
	title?: string;
}

const { src, description, title } = Astro.props;

// Extract filename from src for fallback link text if no title provided
const filename = src.split('/').pop()?.replace(/\.[^/.]+$/, '') || 'audio file';
const displayTitle = title || filename;
---

<div class="audio-player">
	<h4 class="audio-title">{displayTitle}</h4>
	{description && <p class="audio-description">{description}</p>}
	<audio controls>
		<source src={src} />
		Your browser does not support the audio element.
		Please <a href={src} download>download the {displayTitle}</a> instead.
	</audio>
</div>

<style>
	.audio-player {
		margin: 1rem 0;
		padding: 0.75rem;
		border: 1px solid var(--color-border, #e5e7eb);
		border-radius: 0.5rem;
		background-color: var(--color-bg-secondary, #f9fafb);
	}

	.audio-title {
		margin: 0 0 0.5rem 0;
		font-size: 1.1rem;
		font-weight: 600;
		color: var(--color-text-primary, #111827);
	}

	.audio-description {
		margin: 0 0 0.5rem 0;
		font-weight: 400;
		color: var(--color-text-secondary, #6b7280);
		font-size: 0.9rem;
	}

	audio {
		width: 100%;
		height: 2.5rem;
	}

	audio::-webkit-media-controls-panel {
		background-color: var(--color-bg-primary, #ffffff);
	}

	/* Dark mode support */
	@media (prefers-color-scheme: dark) {
		.audio-player {
			border-color: var(--color-border-dark, #374151);
			background-color: var(--color-bg-secondary-dark, #1f2937);
		}

		.audio-title {
			color: var(--color-text-primary-dark, #f9fafb);
		}

		.audio-description {
			color: var(--color-text-secondary-dark, #d1d5db);
		}
	}
</style>
